{"file":"Icon-Dtzd5Hz1.js","mappings":"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","names":["_withAsyncContext","_mergeProps"],"sources":["../../../../node_modules/nuxt/dist/app/composables/state.js","../../../../node_modules/nuxt-icon/dist/runtime/Icon.vue"],"sourcesContent":["import { isRef, toRef } from \"vue\";\nimport { useNuxtApp } from \"../nuxt.js\";\nimport { toArray } from \"../utils.js\";\nconst useStateKeyPrefix = \"$s\";\nexport function useState(...args) {\n  const autoKey = typeof args[args.length - 1] === \"string\" ? args.pop() : void 0;\n  if (typeof args[0] !== \"string\") {\n    args.unshift(autoKey);\n  }\n  const [_key, init] = args;\n  if (!_key || typeof _key !== \"string\") {\n    throw new TypeError(\"[nuxt] [useState] key must be a string: \" + _key);\n  }\n  if (init !== void 0 && typeof init !== \"function\") {\n    throw new Error(\"[nuxt] [useState] init must be a function: \" + init);\n  }\n  const key = useStateKeyPrefix + _key;\n  const nuxtApp = useNuxtApp();\n  const state = toRef(nuxtApp.payload.state, key);\n  if (state.value === void 0 && init) {\n    const initialValue = init();\n    if (isRef(initialValue)) {\n      nuxtApp.payload.state[key] = initialValue;\n      return initialValue;\n    }\n    state.value = initialValue;\n  }\n  return state;\n}\nexport function clearNuxtState(keys) {\n  const nuxtApp = useNuxtApp();\n  const _allKeys = Object.keys(nuxtApp.payload.state).map((key) => key.substring(useStateKeyPrefix.length));\n  const _keys = !keys ? _allKeys : typeof keys === \"function\" ? _allKeys.filter(keys) : toArray(keys);\n  for (const _key of _keys) {\n    const key = useStateKeyPrefix + _key;\n    if (key in nuxtApp.payload.state) {\n      nuxtApp.payload.state[key] = void 0;\n    }\n  }\n}\n","<!-- eslint-disable vue/multi-word-component-names -->\n<script setup lang=\"ts\">\nimport type { IconifyIcon } from '@iconify/vue'\nimport { Icon as Iconify } from '@iconify/vue/dist/offline'\nimport { loadIcon, addAPIProvider } from '@iconify/vue'\nimport { ref, computed, watch } from 'vue'\nimport { useAppConfig, useNuxtApp, useState } from '#imports'\nimport { resolveIconName } from './utils'\n\nconst nuxtApp = useNuxtApp()\nconst appConfig = useAppConfig() as {\n  nuxtIcon: {\n    size?: string\n    class?: string\n    aliases?: Record<string, string>\n    iconifyApiOptions?: {\n      url?: string\n      publicApiFallback?: boolean\n    }\n  }\n}\n\nconst props = defineProps({\n  name: {\n    type: String,\n    required: true\n  },\n  size: {\n    type: String,\n    default: ''\n  }\n})\n\nwatch(() => appConfig.nuxtIcon?.iconifyApiOptions, () => {\n  if (!appConfig.nuxtIcon?.iconifyApiOptions?.url) return\n\n  // validate the custom Iconify API URL\n  try {\n    new URL(appConfig.nuxtIcon.iconifyApiOptions.url)\n  } catch (e) {\n    console.warn('Nuxt Icon: Invalid custom Iconify API URL')\n    return\n  }\n\n  // don't override the default public api if publicApiFallback is enabled. See more: https://iconify.design/docs/api/providers.html\n  if (appConfig.nuxtIcon?.iconifyApiOptions?.publicApiFallback) {\n    addAPIProvider('custom', {\n      resources: [appConfig.nuxtIcon?.iconifyApiOptions.url],\n      index: 0\n    })\n    return\n  }\n\n  // override the default public api to force the use of the custom API\n  addAPIProvider('', {\n    resources: [appConfig.nuxtIcon?.iconifyApiOptions.url],\n  })\n}, { immediate: true })\n\nconst state = useState<Record<string, IconifyIcon | undefined>>('icons', () => ({}))\nconst isFetching = ref(false)\nconst iconName = computed(() => {\n  if (appConfig.nuxtIcon?.aliases?.[props.name]) {\n    return appConfig.nuxtIcon.aliases[props.name]!\n  }\n  return props.name\n})\nconst resolvedIcon = computed(() => resolveIconName(iconName.value))\nconst iconKey = computed(() => [resolvedIcon.value.provider, resolvedIcon.value.prefix, resolvedIcon.value.name].filter(Boolean).join(':'))\nconst icon = computed<IconifyIcon | undefined>(() => state.value?.[iconKey.value])\nconst component = computed(() => nuxtApp.vueApp?.component(iconName.value))\nconst sSize = computed(() => {\n  // Disable size if appConfig.nuxtIcon.size === false\n  // @ts-ignore\n  if (!props.size && typeof appConfig.nuxtIcon?.size === 'boolean' && !appConfig.nuxtIcon?.size) {\n    return undefined\n  }\n  // @ts-ignore\n  const size = props.size || appConfig.nuxtIcon?.size || '1em'\n  if (String(Number(size)) === size) {\n    return `${size}px`\n  }\n  return size\n})\nconst className = computed(() => (appConfig as any)?.nuxtIcon?.class ?? 'icon')\n\nasync function loadIconComponent () {\n  if (component.value) {\n    return\n  }\n  if (!state.value?.[iconKey.value]) {\n    isFetching.value = true\n    state.value[iconKey.value] = await loadIcon(resolvedIcon.value).catch(() => undefined)\n    isFetching.value = false\n  }\n}\n\nwatch(iconName, loadIconComponent)\n\n!component.value && await loadIconComponent()\n</script>\n\n<template>\n  <span v-if=\"isFetching\" :class=\"className\" :style=\"{ width: sSize, height: sSize }\" />\n  <Iconify v-else-if=\"icon\" :icon=\"icon\" :class=\"className\" :width=\"sSize\" :height=\"sSize\" />\n  <Component :is=\"component\" v-else-if=\"component\" :class=\"className\" :width=\"sSize\" :height=\"sSize\" />\n  <span v-else :class=\"className\" :style=\"{ fontSize: sSize, lineHeight: sSize, width: sSize, height: sSize }\"><slot>{{ name }}</slot></span>\n</template>\n\n<style scoped>\n.icon {\n  display: inline-block;\n  vertical-align: middle;\n}\n</style>\n"],"version":3}